#Write command to send bam to hub
#scpcmd. echo 'scp [% step0.file1 %] [% step0.sshlogin %]:[% step0.ftp_base_dir %][% step0.sample %].[% step0.file1ext %]' > [% scpcmd.scpcmd.txt %]
scpcmd. echo '
$ssh->scp_put("[% step0.file1 %]", "[% step0.ftp_base_dir %][% step0.sample %].[% step0.file1ext %]");
$ssh->error and die "SSH connection failed: " . $ssh->error;
' > [% scpcmd.scpcmd.txt %]

#command to copy the index .bai files across too
#scpcmdB. echo 'scp [% step0.file1 %].[% step0.file2ext %] [% step0.sshlogin %]:[% step0.ftp_base_dir %][% step0.sample %].[% step0.file1ext %].[% step0.file2ext %]' >> [% scpcmd.scpcmd.txt %]

scpcmdB. echo '
$ssh->scp_put("[% step0.file1 %].[% step0.file2ext %]","[% step0.ftp_base_dir %][% step0.sample %].[% step0.file1ext %].[% step0.file2ext %]");
$ssh->error and die "SSH connection failed: " . $ssh->error;
' >> [% scpcmd.scpcmd.txt %]


maketrackentry. echo '
track [% step0.sample %]_reads
bigDataUrl [% step0.ftp_base_dir %][% step0.sample %].[% step0.file1ext %]
shortLabel [% step0.sample %]_RNA_SEQ
longLabel [% step0.sample %]_RNA_SEQ
type bigWig' > [% maketrackentry.file1.txt %]

writeplfile.once echo '
use strict;
use warnings;
use Net::OpenSSH;

my ($username, $password) = @ARGV;
die "USAGE: scp_openssh.pl username password\n" unless ($username and $password);
my $ssh = Net::OpenSSH->new( $username.'@[% step0.sshlogin %]', passwd => $password);
$ssh->error and die "SSH connection failed: " . $ssh->error;
' > [% global.scpcmd.pl %]

writeallsshentries.once cat [% jobs.scpcmd.scpcmd.txt %] >> [% global.scpcmd.pl %]
#writeallsshentries.once cat [% jobs.scpcmd.scpcmd.txt %] > [% global.scpcmd.sh %]

writealltrackentries.once cat [% jobs.maketrackentry.file1.txt %] > [% global.ucschub.txt %]
